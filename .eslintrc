{
  "env": {
    "browser": true,
    "es2022": true
  },
  "extends": [
    "plugin:react/recommended",
    "airbnb",
    "airbnb-typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:tailwindcss/recommended",
    "plugin:react-hooks/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "prettier"],
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "rules": {
    "prettier/prettier": "error",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-key": "error",
    "react/jsx-no-target-blank": [
      "error",
      {
        "allowReferrer": true
      }
    ],
    "react/boolean-prop-naming": [
      "error",
      {
        "validateNested": true,
        "rule": "(^(is|has)[A-Z]([A-Za-z0-9]?)+)|asChild"
      }
    ],
    "react/jsx-sort-props": [
      "error",
      {
        "ignoreCase": true,
        "shorthandLast": true,
        "callbacksLast": true,
        "multiline": "last",
        "reservedFirst": true
      }
    ],
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/sort-type-constituents": "error",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/no-unused-expressions": ["error", { "allowTernary": true }],
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/prefer-nullish-coalescing": [
      "error",
      {
        "ignoreTernaryTests": false,
        "ignoreConditionalTests": false
      }
    ],
    "import/prefer-default-export": "off",
    "import/no-default-export": "error",
    "import/no-cycle": "off",
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "newlines-between": "always"
      }
    ],
    "jsx-a11y/media-has-caption": "off",
    "jsx-a11y/mouse-events-have-key-events": "error",
    "jsx-a11y/label-has-associated-control": [
      "error",
      {
        "assert": "either"
      }
    ],
    "tailwindcss/no-custom-classname": [
      "error",
      {
        "callees": ["classnames", "clsx", "ctl", "cva", "tv", "cn"]
      }
    ],
    "tailwindcss/classnames-order": [
      "error",
      {
        "callees": ["classnames", "clsx", "ctl", "cva", "tv", "cn"]
      }
    ],
    "no-param-reassign": [
      "error",
      {
        "props": false
      }
    ]
  },
  "ignorePatterns": [
    "vite.config.ts",
    "tailwind.config.ts",
    "postcss.config.js",
    "vitest.config.*",
    "setupTests.ts"
  ]
}
